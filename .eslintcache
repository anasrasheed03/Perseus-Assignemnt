[{"D:\\react-work\\other\\Perseus-Assignemnt\\assignment\\src\\index.js":"1","D:\\react-work\\other\\Perseus-Assignemnt\\assignment\\src\\App.js":"2","D:\\react-work\\other\\Perseus-Assignemnt\\assignment\\src\\pages\\Home\\Home.jsx":"3","D:\\react-work\\other\\Perseus-Assignemnt\\assignment\\src\\components\\ViewCharacterDetails\\ViewCharacterDetails.jsx":"4","D:\\react-work\\other\\Perseus-Assignemnt\\assignment\\src\\components\\ModalWrapper\\ModalWrapper.jsx":"5","D:\\react-work\\other\\Perseus-Assignemnt\\assignment\\src\\components\\CharacterList\\CharacterList.jsx":"6","D:\\react-work\\other\\Perseus-Assignemnt\\assignment\\src\\components\\Character\\Character.jsx":"7","D:\\react-work\\other\\Perseus-Assignemnt\\assignment\\src\\components\\Loader\\Loader.jsx":"8","D:\\react-work\\other\\Perseus-Assignemnt\\assignment\\src\\components\\RecommendedCharacters\\RecommendedCharacters.jsx":"9"},{"size":170,"mtime":1646582991605,"results":"10","hashOfConfig":"11"},{"size":153,"mtime":1646592205214,"results":"12","hashOfConfig":"11"},{"size":5382,"mtime":1646605835252,"results":"13","hashOfConfig":"11"},{"size":2553,"mtime":1646592200090,"results":"14","hashOfConfig":"11"},{"size":368,"mtime":1646592189248,"results":"15","hashOfConfig":"11"},{"size":1038,"mtime":1646610870048,"results":"16","hashOfConfig":"11"},{"size":724,"mtime":1646605993180,"results":"17","hashOfConfig":"11"},{"size":269,"mtime":1646592177530,"results":"18","hashOfConfig":"11"},{"size":1517,"mtime":1646592194654,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"1lwwvuz",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"D:\\react-work\\other\\Perseus-Assignemnt\\assignment\\src\\index.js",["45"],"import ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n",["46","47"],"D:\\react-work\\other\\Perseus-Assignemnt\\assignment\\src\\App.js",[],"D:\\react-work\\other\\Perseus-Assignemnt\\assignment\\src\\pages\\Home\\Home.jsx",["48","49","50","51"],"import { useState, useEffect } from \"react\";\r\nimport { Container, Row, Col, Card } from \"react-bootstrap\";\r\nimport logo from '../../assets/images/rick-and-morty-logo.png';\r\nimport { useForm } from 'react-hook-form';\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport ViewCharacterDetails from \"../../components/ViewCharacterDetails/ViewCharacterDetails\";\r\nimport ModalWrapper from \"../../components/ModalWrapper/ModalWrapper\"\r\nimport axios from 'axios';\r\nimport CharacterList from '../../components/CharacterList/CharacterList'\r\nimport './Home.css'\r\nconst Home = () => {\r\n    const { register, handleSubmit, reset } = useForm();\r\n    const [characterList, setCharacterList] = useState([])\r\n    const [characterInfo, setCharacterInfo] = useState()\r\n    const [view, setView] = useState(false)\r\n    const [viewCharacter, setCharacter] = useState('');\r\n    const api = 'https://rickandmortyapi.com/api/character/';\r\n    const [searchQuery, setSearchQuery] = useState('');\r\n    const [searchQueryString, setSearchQueryString] = useState('');\r\n    const [loading, setLoading] = useState(false)\r\n    const onSubmit = (form) => {\r\n        console.log(form)\r\n        if (form.name) {\r\n            const result = [];\r\n            setCharacterList(result);\r\n            setSearchQueryString(form.name);\r\n            const query = `${api}?name=${form.name}`;\r\n            setSearchQuery(query)\r\n            // loadData(query);\r\n        } else {\r\n            setSearchQuery('');\r\n        }\r\n        reset();\r\n    }\r\n\r\n    const resetSearch = () => {\r\n        const result = [];\r\n        setCharacterList(result);\r\n        setSearchQueryString('')\r\n        setSearchQuery('')\r\n\r\n    }\r\n    useEffect(() => {\r\n        if (searchQuery != '') {\r\n            loadData(searchQuery);\r\n        } else {\r\n            loadData(api);\r\n        }\r\n    }, [searchQuery])\r\n\r\n    useEffect(() => {\r\n        loadData(api)\r\n    }, [])\r\n\r\n    const loadData = (api) => {\r\n        if (api) {\r\n            setLoading(true)\r\n            axios.get(api)\r\n                .then(res => {\r\n                    let result = res.data.results\r\n                    console.log(result)\r\n                    console.log(characterList)\r\n                    setCharacterList([...characterList, ...result])\r\n                    setCharacterInfo(res.data.info)\r\n                }).catch(error => {\r\n                    setCharacterList([]);\r\n                    setCharacterInfo('')\r\n                    console.error('Error:', error);\r\n                })\r\n                .finally(() => {\r\n                    setLoading(false);\r\n                });\r\n        }\r\n    }\r\n\r\n    const viewDetails = (data) => {\r\n        console.log(data)\r\n        setCharacter(data);\r\n        setView(true);\r\n    }\r\n\r\n    const closeHandler = () => {\r\n        setView(prvState => !prvState);\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container id=\"header\">\r\n                <Row>\r\n                    <Col>\r\n                        <div className=\"home\">\r\n                            <img className=\"logo\" src={logo} alt=\"logo\" />\r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Container>\r\n                <Row>\r\n                    <Col>\r\n                        <form onSubmit={handleSubmit(onSubmit)} id=\"form\" className=\"center-content\">\r\n                            <input\r\n                                className='form-field'\r\n                                type='search'\r\n                                placeholder='Search for a character'\r\n                                name='name'\r\n                                {...register('name')}></input>\r\n                            <input\r\n                                className='submit-button'\r\n                                type='submit'\r\n                                value='Submit'></input>\r\n                        </form>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            <Container>\r\n                {searchQueryString !== '' ? (\r\n                    <Row>\r\n                        <Col md={10}>\r\n                            <div>\r\n                                <h3>Searched for: {searchQueryString}</h3>\r\n                            </div>\r\n                        </Col>\r\n                        <Col md={2}>\r\n                            <button type=\"button\" class=\"load-more-btn\" id=\"resetSearch\" onClick={() => resetSearch(api)}>Reset Search</button>\r\n                        </Col>\r\n                    </Row>\r\n                ) : (''\r\n                )}\r\n                <Row>\r\n                    {!loading && characterList?.length > 0 ?\r\n                        <CharacterList characterList={characterList} setLoading={setLoading} info={characterInfo} loadData={loadData} viewDetails={viewDetails} />\r\n                        :\r\n                        <>\r\n                            {!loading && <div className=\"norecord\">\r\n                                <p>No records found.</p>\r\n                            </div>}\r\n                        </>\r\n                    }\r\n                </Row>\r\n\r\n            </Container>\r\n            {view && <ModalWrapper> <ViewCharacterDetails data={viewCharacter} onClose={closeHandler} /></ModalWrapper>}\r\n            {loading && <Loader />}\r\n\r\n        </>\r\n    )\r\n\r\n}\r\nexport default Home;","D:\\react-work\\other\\Perseus-Assignemnt\\assignment\\src\\components\\ViewCharacterDetails\\ViewCharacterDetails.jsx",["52","53"],"import { useState } from \"react\";\r\nimport { Card, Row, Col } from \"react-bootstrap\";\r\nimport uncheckimg from '../../assets/images/uncheckimg.png';\r\nimport RecommendedCharacters from \"../RecommendedCharacters/RecommendedCharacters\";\r\nconst ViewCharacterDetails = (props) => {\r\n    console.log(props.data)\r\n    const [characterData, setCharacterData] = useState(props.data)\r\n\r\n    return (\r\n        <>\r\n            <div className=\"header\">\r\n                <h3>Character Details</h3>\r\n                <img src={uncheckimg} onClick={props.onClose} alt=\"uncheck\" />\r\n            </div>\r\n            <Card className=\"character-list-Details\">\r\n                <img className=\"character-Detail-image\" src={characterData.image} alt=\"characterImage\" />\r\n                <div className=\"row\">\r\n                    <Col md={6}>\r\n                        Name:\r\n                    </Col>\r\n                    <Col md={6} className=\"text-left\">\r\n                        {characterData.name}\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        Species:\r\n                    </Col>\r\n                    <Col md={6} className=\"text-left\">\r\n                        {characterData.species}\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        Status:\r\n                    </Col>\r\n                    <Col md={6} className=\"text-left\">\r\n                        {characterData.status}\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        Location:\r\n                    </Col>\r\n                    <Col md={6} className=\"text-left\">\r\n                        {characterData.location.name}\r\n                    </Col>\r\n\r\n                    <Col md={6}>\r\n                        Gender:\r\n                    </Col>\r\n                    <Col md={6} className=\"text-left\">\r\n                        {characterData.gender}\r\n                    </Col>\r\n\r\n                    <Col md={6}>\r\n                        Created On:\r\n                    </Col>\r\n                    <Col md={6} className=\"text-left\">\r\n                        {characterData.created}\r\n                    </Col>\r\n                </div>\r\n            </Card>\r\n            {characterData.species !== '' ? (\r\n                <div>\r\n                    <h4>Recommended Characters for Specie: {characterData.species}</h4>\r\n                    <RecommendedCharacters species={characterData.species} />\r\n                </div>) : (''\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ViewCharacterDetails;","D:\\react-work\\other\\Perseus-Assignemnt\\assignment\\src\\components\\ModalWrapper\\ModalWrapper.jsx",["54","55"],"import React, { useState } from 'react';\r\nimport { Modal, Button } from \"react-bootstrap\";\r\n\r\nconst ModalWrapper = (props) => {\r\n    const [isActiveModal, setActiveModal] = useState(true);\r\n\r\n\r\n    return (\r\n        <Modal show={isActiveModal} centered className=\"modalDiv\">\r\n            {props.children}\r\n        </Modal>\r\n\r\n    );\r\n};\r\n\r\nexport default ModalWrapper;","D:\\react-work\\other\\Perseus-Assignemnt\\assignment\\src\\components\\CharacterList\\CharacterList.jsx",["56","57"],"import { useState } from \"react\";\r\nimport { Col, Card, Row } from \"react-bootstrap\";\r\nimport Character from '../Character/Character'\r\nconst CharacterList = (props) => {\r\n  const [items, setItems] = useState(props.characterList);\r\n\r\n\r\n  return (\r\n    <>\r\n    <Row>\r\n      <Col md={8}>\r\n      <div id=\"viewRecords\">Number of Results:\r\n        <span data-testid=\"fetch-records\"> {items.length}</span>\r\n      </div>\r\n      </Col>\r\n      <Col md={4}>\r\n      <div id=\"totalRecords\">Total Records:\r\n        <span data-testid=\"total-records\">{props.info.count}</span>\r\n      </div>\r\n      </Col>\r\n      </Row>\r\n      {items.map((character, index) => {\r\n        return (\r\n          <Col sm={4} md={4}>\r\n            <Character key={index} character={character} viewDetails={props.viewDetails} />\r\n          </Col>\r\n        )\r\n      })\r\n      }\r\n      {items.length < props.info.count && <button type=\"button\" class=\"load-more-btn\" onClick={() => props.loadData(props.info.next)}>Load More</button>}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CharacterList;","D:\\react-work\\other\\Perseus-Assignemnt\\assignment\\src\\components\\Character\\Character.jsx",[],"D:\\react-work\\other\\Perseus-Assignemnt\\assignment\\src\\components\\Loader\\Loader.jsx",[],"D:\\react-work\\other\\Perseus-Assignemnt\\assignment\\src\\components\\RecommendedCharacters\\RecommendedCharacters.jsx",["58"],"import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Table } from \"react-bootstrap\";\r\n\r\nconst RecommendedCharacters = (props) => {\r\n  console.log(props.species)\r\n  const api = `https://rickandmortyapi.com/api/character/?species=${props.species}`;\r\n  const [recommendedList, setRecommendedList] = useState([])\r\n\r\n  useEffect(() => {\r\n    loadRecommended(api)\r\n  }, [])\r\n\r\n  const loadRecommended = (api) => {\r\n    axios.get(api)\r\n      .then(res => {\r\n        let result = res.data.results\r\n        console.log(result)\r\n        setRecommendedList(result)\r\n      }).catch(error => {\r\n        console.error('Error:', error);\r\n      })\r\n      .finally(() => {\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Table striped bordered hover size=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Name</th>\r\n            <th>Status</th>\r\n            <th>Gender</th>\r\n            <th>Image</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {recommendedList.map((character, index) => {\r\n            return (\r\n              <tr>\r\n                <td>{index + 1}</td>\r\n                <td>{character.name}</td>\r\n                <td>{character.status}</td>\r\n                <td>{character.gender}</td>\r\n                <td><img className=\"character-table-image\" src={character.image} alt=\"characterImage\" /></td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </Table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default RecommendedCharacters;",{"ruleId":"59","severity":1,"message":"60","line":2,"column":8,"nodeType":"61","messageId":"62","endLine":2,"endColumn":13},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"59","severity":1,"message":"67","line":2,"column":31,"nodeType":"61","messageId":"62","endLine":2,"endColumn":35},{"ruleId":"68","severity":1,"message":"69","line":44,"column":25,"nodeType":"70","messageId":"71","endLine":44,"endColumn":27},{"ruleId":"72","severity":1,"message":"73","line":49,"column":8,"nodeType":"74","endLine":49,"endColumn":21,"suggestions":"75"},{"ruleId":"72","severity":1,"message":"73","line":53,"column":8,"nodeType":"74","endLine":53,"endColumn":10,"suggestions":"76"},{"ruleId":"59","severity":1,"message":"77","line":2,"column":16,"nodeType":"61","messageId":"62","endLine":2,"endColumn":19},{"ruleId":"59","severity":1,"message":"78","line":7,"column":27,"nodeType":"61","messageId":"62","endLine":7,"endColumn":43},{"ruleId":"59","severity":1,"message":"79","line":2,"column":17,"nodeType":"61","messageId":"62","endLine":2,"endColumn":23},{"ruleId":"59","severity":1,"message":"80","line":5,"column":27,"nodeType":"61","messageId":"62","endLine":5,"endColumn":41},{"ruleId":"59","severity":1,"message":"67","line":2,"column":15,"nodeType":"61","messageId":"62","endLine":2,"endColumn":19},{"ruleId":"59","severity":1,"message":"81","line":5,"column":17,"nodeType":"61","messageId":"62","endLine":5,"endColumn":25},{"ruleId":"72","severity":1,"message":"82","line":12,"column":6,"nodeType":"74","endLine":12,"endColumn":8,"suggestions":"83"},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","no-native-reassign",["84"],"no-negated-in-lhs",["85"],"'Card' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.","ArrayExpression",["86"],["87"],"'Row' is defined but never used.","'setCharacterData' is assigned a value but never used.","'Button' is defined but never used.","'setActiveModal' is assigned a value but never used.","'setItems' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'api'. Either include it or remove the dependency array.",["88"],"no-global-assign","no-unsafe-negation",{"desc":"89","fix":"90"},{"desc":"91","fix":"92"},{"desc":"93","fix":"94"},"Update the dependencies array to be: [loadData, searchQuery]",{"range":"95","text":"96"},"Update the dependencies array to be: [loadData]",{"range":"97","text":"98"},"Update the dependencies array to be: [api]",{"range":"99","text":"100"},[1841,1854],"[loadData, searchQuery]",[1912,1914],"[loadData]",[394,396],"[api]"]